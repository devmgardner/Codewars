import numpy as np
import pandas as pd
fname = 'sudoku-pandas-log.txt'
fhand = open(fname, 'w')
fhand.close()
fhand = open(fname, 'r+')
puzzle = '530070000 600195000 098000060 800060003 400803001 700020006 060000280 000419005 000080079'
puzzle = puzzle.split()
import itertools
counter = itertools.count(0)
counter = itertools.count(1)
temp = [[(char, next(counter)) for char in w] for w in puzzle]
fhand.write(f"puzzle is 530070000 600195000 098000060 800060003 400803001 700020006 060000280 000419005 000080079\n")
fhand.write(f"puzzle is {puzzle}\n")
fhand.write(f"words are {[w for w in puzzle]}\n")
fhand.write(f"chars are {[[char for char in w] for w in puzzle]}\n")
fhand.write(f"temp is {temp}\n")
fhand.write(f"temp[0] is {temp[0]}\n")
fhand.write(f"temp[1] is {temp[1]}\n")
fhand.write(f"temp[2] is {temp[2]}\n")
fhand.write(f"temp[3] is {temp[3]}\n")
fhand.write(f"temp[4] is {temp[4]}\n")
fhand.write(f"temp[5] is {temp[5]}\n")
fhand.write(f"temp[6] is {temp[6]}\n")
fhand.write(f"temp[7] is {temp[7]}\n")
fhand.write(f"temp[8] is {temp[8]}\n")
fhand.close()
fhand = open(fname, 'r')
fhand.write('test')
fhand = open(fname, 'r+')
fhand.write('test')
fhand.close()
fhand = open(fname, 'r+')
fhand.write('puzz')
fhand.close()
fhand = open(fname, 'a')
fhand.write('\n')
fhand.write(f'puzzle as dataframe is\n')
fhand.write(f"pd.DataFrame.from_records(temp, index=[1,2,3,4,5,6,7,8,9], columns=['A','B','C','D','E','F','G','H','I'])\n")
fhand.close()
fhand = open(fname, 'a')
fhand.write('\n')
fhand.write(f'puzzle as dataframe is\n')
fhand.write(f"{pd.DataFrame.from_records(temp, index=[1,2,3,4,5,6,7,8,9], columns=['A','B','C','D','E','F','G','H','I'])}\n")
fhand.close()

OUTPUT
puzzle is 530070000 600195000 098000060 800060003 400803001 700020006 060000280 000419005 000080079
words are ['530070000', '600195000', '098000060', '800060003', '400803001', '700020006', '060000280', '000419005', '000080079']
chars are [['5', '3', '0', '0', '7', '0', '0', '0', '0'], ['6', '0', '0', '1', '9', '5', '0', '0', '0'], ['0', '9', '8', '0', '0', '0', '0', '6', '0'], ['8', '0', '0', '0', '6', '0', '0', '0', '3'], ['4', '0', '0', '8', '0', '3', '0', '0', '1'], ['7', '0', '0', '0', '2', '0', '0', '0', '6'], ['0', '6', '0', '0', '0', '0', '2', '8', '0'], ['0', '0', '0', '4', '1', '9', '0', '0', '5'], ['0', '0', '0', '0', '8', '0', '0', '7', '9']]
temp is [[('5', 1), ('3', 2), ('0', 3), ('0', 4), ('7', 5), ('0', 6), ('0', 7), ('0', 8), ('0', 9)], [('6', 10), ('0', 11), ('0', 12), ('1', 13), ('9', 14), ('5', 15), ('0', 16), ('0', 17), ('0', 18)], [('0', 19), ('9', 20), ('8', 21), ('0', 22), ('0', 23), ('0', 24), ('0', 25), ('6', 26), ('0', 27)], [('8', 28), ('0', 29), ('0', 30), ('0', 31), ('6', 32), ('0', 33), ('0', 34), ('0', 35), ('3', 36)], [('4', 37), ('0', 38), ('0', 39), ('8', 40), ('0', 41), ('3', 42), ('0', 43), ('0', 44), ('1', 45)], [('7', 46), ('0', 47), ('0', 48), ('0', 49), ('2', 50), ('0', 51), ('0', 52), ('0', 53), ('6', 54)], [('0', 55), ('6', 56), ('0', 57), ('0', 58), ('0', 59), ('0', 60), ('2', 61), ('8', 62), ('0', 63)], [('0', 64), ('0', 65), ('0', 66), ('4', 67), ('1', 68), ('9', 69), ('0', 70), ('0', 71), ('5', 72)], [('0', 73), ('0', 74), ('0', 75), ('0', 76), ('8', 77), ('0', 78), ('0', 79), ('7', 80), ('9', 81)]]
temp[0] is [('5', 1), ('3', 2), ('0', 3), ('0', 4), ('7', 5), ('0', 6), ('0', 7), ('0', 8), ('0', 9)]
temp[1] is [('6', 10), ('0', 11), ('0', 12), ('1', 13), ('9', 14), ('5', 15), ('0', 16), ('0', 17), ('0', 18)]
temp[2] is [('0', 19), ('9', 20), ('8', 21), ('0', 22), ('0', 23), ('0', 24), ('0', 25), ('6', 26), ('0', 27)]
temp[3] is [('8', 28), ('0', 29), ('0', 30), ('0', 31), ('6', 32), ('0', 33), ('0', 34), ('0', 35), ('3', 36)]
temp[4] is [('4', 37), ('0', 38), ('0', 39), ('8', 40), ('0', 41), ('3', 42), ('0', 43), ('0', 44), ('1', 45)]
temp[5] is [('7', 46), ('0', 47), ('0', 48), ('0', 49), ('2', 50), ('0', 51), ('0', 52), ('0', 53), ('6', 54)]
temp[6] is [('0', 55), ('6', 56), ('0', 57), ('0', 58), ('0', 59), ('0', 60), ('2', 61), ('8', 62), ('0', 63)]
temp[7] is [('0', 64), ('0', 65), ('0', 66), ('4', 67), ('1', 68), ('9', 69), ('0', 70), ('0', 71), ('5', 72)]
temp[8] is [('0', 73), ('0', 74), ('0', 75), ('0', 76), ('8', 77), ('0', 78), ('0', 79), ('7', 80), ('9', 81)]

puzzle as dataframe is
         A        B        C        D        E        F        G        H        I
1   (5, 1)   (3, 2)   (0, 3)   (0, 4)   (7, 5)   (0, 6)   (0, 7)   (0, 8)   (0, 9)
2  (6, 10)  (0, 11)  (0, 12)  (1, 13)  (9, 14)  (5, 15)  (0, 16)  (0, 17)  (0, 18)
3  (0, 19)  (9, 20)  (8, 21)  (0, 22)  (0, 23)  (0, 24)  (0, 25)  (6, 26)  (0, 27)
4  (8, 28)  (0, 29)  (0, 30)  (0, 31)  (6, 32)  (0, 33)  (0, 34)  (0, 35)  (3, 36)
5  (4, 37)  (0, 38)  (0, 39)  (8, 40)  (0, 41)  (3, 42)  (0, 43)  (0, 44)  (1, 45)
6  (7, 46)  (0, 47)  (0, 48)  (0, 49)  (2, 50)  (0, 51)  (0, 52)  (0, 53)  (6, 54)
7  (0, 55)  (6, 56)  (0, 57)  (0, 58)  (0, 59)  (0, 60)  (2, 61)  (8, 62)  (0, 63)
8  (0, 64)  (0, 65)  (0, 66)  (4, 67)  (1, 68)  (9, 69)  (0, 70)  (0, 71)  (5, 72)
9  (0, 73)  (0, 74)  (0, 75)  (0, 76)  (8, 77)  (0, 78)  (0, 79)  (7, 80)  (9, 81)
